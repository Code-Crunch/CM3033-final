package CM3033Application;

import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;


/**
 * @author Marina Shchukina 1014481
 * 
 */
public class ServerApp extends javax.swing.JFrame implements Runnable {

    ////////////////////////////
    //////   VARIABLES   ///////
    ////////////////////////////
    
    // A date format template
    final DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
    // A calendar to store the time of now and the time the application was started
    Calendar now = null, start = Calendar.getInstance();
    // Variable to store the Shared Data class
    DataShare dataShare;

    ////////////////////////////
    //////  CONSTRUCTOR  ///////
    ////////////////////////////
    public ServerApp() throws IOException {
        // Initialise the components
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        Connection1 = new javax.swing.JPanel();
        bpmLabel1 = new javax.swing.JLabel();
        bpmValue1 = new javax.swing.JLabel();
        lastUpdateLabel1 = new javax.swing.JLabel();
        lastUpdateValue1 = new javax.swing.JTextField();
        minLabel1 = new javax.swing.JLabel();
        minValue1 = new javax.swing.JLabel();
        maxValue1 = new javax.swing.JLabel();
        alarmLog1 = new javax.swing.JScrollPane();
        maxLabel1 = new javax.swing.JLabel();
        Connection2 = new javax.swing.JPanel();
        bpmLabel2 = new javax.swing.JLabel();
        bpmValue2 = new javax.swing.JLabel();
        lastUpdateLabel2 = new javax.swing.JLabel();
        lastUpdateValue2 = new javax.swing.JTextField();
        maxLabel2 = new javax.swing.JLabel();
        minLabel2 = new javax.swing.JLabel();
        minValue2 = new javax.swing.JLabel();
        maxValue2 = new javax.swing.JLabel();
        alarmLog2 = new javax.swing.JScrollPane();
        Connection3 = new javax.swing.JPanel();
        bpmLabel3 = new javax.swing.JLabel();
        bpmValue3 = new javax.swing.JLabel();
        lastUpdateLabel3 = new javax.swing.JLabel();
        lastUpdateValue3 = new javax.swing.JTextField();
        maxLabel3 = new javax.swing.JLabel();
        minLabel3 = new javax.swing.JLabel();
        minValue3 = new javax.swing.JLabel();
        maxValue3 = new javax.swing.JLabel();
        alarmLog3 = new javax.swing.JScrollPane();
        Connection4 = new javax.swing.JPanel();
        bpmLabel4 = new javax.swing.JLabel();
        bpmValue4 = new javax.swing.JLabel();
        lastUpdateLabel4 = new javax.swing.JLabel();
        lastUpdateValue4 = new javax.swing.JTextField();
        maxLabel4 = new javax.swing.JLabel();
        minLabel4 = new javax.swing.JLabel();
        minValue4 = new javax.swing.JLabel();
        maxValue4 = new javax.swing.JLabel();
        alarmLog4 = new javax.swing.JScrollPane();
        alarmButtons = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        elapsedTimeValue = new javax.swing.JLabel();
        currentTimeValue = new javax.swing.JLabel();
        elapsedTime = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        currentTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Connections");

        jCheckBox1.setText("Patient 1");
        jCheckBox1.setEnabled(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Patient 2");
        jCheckBox2.setEnabled(false);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Patient 3");
        jCheckBox3.setEnabled(false);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Patient 4");
        jCheckBox4.setEnabled(false);
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1)
                        .addGap(29, 29, 29)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox3)
                        .addGap(39, 39, 39)
                        .addComponent(jCheckBox4)
                        .addGap(198, 198, 198))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Connection1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Connection1.setName("Patient 1"); // NOI18N

        bpmLabel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        bpmLabel1.setText("Patient's 1 BPM:");

        bpmValue1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        bpmValue1.setForeground(new java.awt.Color(45, 2, 208));
        bpmValue1.setText("Not Connected");

        lastUpdateLabel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lastUpdateLabel1.setText("Last message was received at:");

        lastUpdateValue1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lastUpdateValue1.setEnabled(false);

        minLabel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        minLabel1.setText("Min");

        minValue1.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        maxValue1.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        alarmLog1.setToolTipText("");
        alarmLog1.setAutoscrolls(true);
        alarmLog1.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        alarmLog1.setName("Alarm Log"); // NOI18N

        maxLabel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        maxLabel1.setText("Max");

        javax.swing.GroupLayout Connection1Layout = new javax.swing.GroupLayout(Connection1);
        Connection1.setLayout(Connection1Layout);
        Connection1Layout.setHorizontalGroup(
            Connection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Connection1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Connection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(alarmLog1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection1Layout.createSequentialGroup()
                        .addComponent(minLabel1)
                        .addGap(31, 31, 31)
                        .addComponent(minValue1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxLabel1)
                        .addGap(28, 28, 28)
                        .addComponent(maxValue1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection1Layout.createSequentialGroup()
                        .addComponent(bpmLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bpmValue1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection1Layout.createSequentialGroup()
                        .addComponent(lastUpdateLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastUpdateValue1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Connection1Layout.setVerticalGroup(
            Connection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Connection1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Connection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpmLabel1)
                    .addComponent(bpmValue1))
                .addGap(11, 11, 11)
                .addGroup(Connection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastUpdateLabel1)
                    .addComponent(lastUpdateValue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(Connection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minValue1)
                    .addGroup(Connection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(minLabel1)
                        .addGroup(Connection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxValue1)
                            .addComponent(maxLabel1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alarmLog1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        alarmLog1.getAccessibleContext().setAccessibleName("Alarm log");

        Connection2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Connection2.setName("Patient 1"); // NOI18N

        bpmLabel2.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        bpmLabel2.setText("Patient's 2 BPM:");

        bpmValue2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        bpmValue2.setForeground(new java.awt.Color(45, 2, 208));
        bpmValue2.setText("Not Connected");

        lastUpdateLabel2.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lastUpdateLabel2.setText("Last message was received at:");

        lastUpdateValue2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lastUpdateValue2.setEnabled(false);

        maxLabel2.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        maxLabel2.setText("Min");

        minLabel2.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        minLabel2.setText("Max");

        minValue2.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        maxValue2.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        alarmLog2.setToolTipText("");
        alarmLog2.setAutoscrolls(true);
        alarmLog2.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        alarmLog2.setName("Alarm Log"); // NOI18N

        javax.swing.GroupLayout Connection2Layout = new javax.swing.GroupLayout(Connection2);
        Connection2.setLayout(Connection2Layout);
        Connection2Layout.setHorizontalGroup(
            Connection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Connection2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Connection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(alarmLog2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection2Layout.createSequentialGroup()
                        .addComponent(maxLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(minValue2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(minLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(maxValue2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection2Layout.createSequentialGroup()
                        .addComponent(bpmLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bpmValue2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection2Layout.createSequentialGroup()
                        .addComponent(lastUpdateLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastUpdateValue2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Connection2Layout.setVerticalGroup(
            Connection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Connection2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Connection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpmLabel2)
                    .addComponent(bpmValue2))
                .addGap(11, 11, 11)
                .addGroup(Connection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastUpdateLabel2)
                    .addComponent(lastUpdateValue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(Connection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Connection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maxLabel2)
                        .addComponent(minValue2))
                    .addGroup(Connection2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minLabel2)
                        .addComponent(maxValue2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alarmLog2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Connection3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Connection3.setName("Patient 1"); // NOI18N

        bpmLabel3.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        bpmLabel3.setText("Patient's 3 BPM:");

        bpmValue3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        bpmValue3.setForeground(new java.awt.Color(45, 2, 208));
        bpmValue3.setText("Not Connected");

        lastUpdateLabel3.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lastUpdateLabel3.setText("Last message was received at:");

        lastUpdateValue3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lastUpdateValue3.setEnabled(false);
        lastUpdateValue3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastUpdateValue3ActionPerformed(evt);
            }
        });

        maxLabel3.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        maxLabel3.setText("Min");

        minLabel3.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        minLabel3.setText("Max");

        minValue3.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        maxValue3.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        alarmLog3.setToolTipText("");
        alarmLog3.setAutoscrolls(true);
        alarmLog3.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        alarmLog3.setName("Alarm Log"); // NOI18N

        javax.swing.GroupLayout Connection3Layout = new javax.swing.GroupLayout(Connection3);
        Connection3.setLayout(Connection3Layout);
        Connection3Layout.setHorizontalGroup(
            Connection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Connection3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Connection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(alarmLog3)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection3Layout.createSequentialGroup()
                        .addComponent(maxLabel3)
                        .addGap(28, 28, 28)
                        .addComponent(minValue3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(minLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(maxValue3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection3Layout.createSequentialGroup()
                        .addComponent(bpmLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bpmValue3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection3Layout.createSequentialGroup()
                        .addComponent(lastUpdateLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastUpdateValue3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Connection3Layout.setVerticalGroup(
            Connection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Connection3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Connection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpmLabel3)
                    .addComponent(bpmValue3))
                .addGap(11, 11, 11)
                .addGroup(Connection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastUpdateLabel3)
                    .addComponent(lastUpdateValue3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(Connection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Connection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maxLabel3)
                        .addComponent(minValue3))
                    .addGroup(Connection3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minLabel3)
                        .addComponent(maxValue3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alarmLog3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        Connection4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Connection4.setName("Patient 1"); // NOI18N

        bpmLabel4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        bpmLabel4.setText("Patient's 4 BPM:");

        bpmValue4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        bpmValue4.setForeground(new java.awt.Color(45, 2, 208));
        bpmValue4.setText("Not Connected");

        lastUpdateLabel4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lastUpdateLabel4.setText("Last message was received at:");

        lastUpdateValue4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lastUpdateValue4.setEnabled(false);

        maxLabel4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        maxLabel4.setText("Min");

        minLabel4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        minLabel4.setText("Max");

        minValue4.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        maxValue4.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        alarmLog4.setToolTipText("");
        alarmLog4.setAutoscrolls(true);
        alarmLog4.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        alarmLog4.setName("Alarm Log"); // NOI18N

        javax.swing.GroupLayout Connection4Layout = new javax.swing.GroupLayout(Connection4);
        Connection4.setLayout(Connection4Layout);
        Connection4Layout.setHorizontalGroup(
            Connection4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Connection4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Connection4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(alarmLog4)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection4Layout.createSequentialGroup()
                        .addComponent(maxLabel4)
                        .addGap(28, 28, 28)
                        .addComponent(minValue4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(minLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(maxValue4))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection4Layout.createSequentialGroup()
                        .addComponent(bpmLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bpmValue4))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Connection4Layout.createSequentialGroup()
                        .addComponent(lastUpdateLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lastUpdateValue4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Connection4Layout.setVerticalGroup(
            Connection4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Connection4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Connection4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpmLabel4)
                    .addComponent(bpmValue4))
                .addGap(11, 11, 11)
                .addGroup(Connection4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastUpdateLabel4)
                    .addComponent(lastUpdateValue4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(Connection4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Connection4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maxLabel4)
                        .addComponent(minValue4))
                    .addGroup(Connection4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minLabel4)
                        .addComponent(maxValue4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alarmLog4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Turn off alarm 1");

        jButton2.setText("Turn off alarm 2");

        jButton3.setText("Turn off alarm 3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Turn off alarm 4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout alarmButtonsLayout = new javax.swing.GroupLayout(alarmButtons);
        alarmButtons.setLayout(alarmButtonsLayout);
        alarmButtonsLayout.setHorizontalGroup(
            alarmButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alarmButtonsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addGap(97, 97, 97)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(80, 80, 80)
                .addComponent(jButton4)
                .addGap(27, 27, 27))
        );
        alarmButtonsLayout.setVerticalGroup(
            alarmButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alarmButtonsLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(alarmButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        elapsedTimeValue.setText("00:00:00");

        currentTimeValue.setText("00:00:00");

        elapsedTime.setText("Elapsed Time:");

        currentTime.setText("Current Time:");
        jScrollPane1.setViewportView(currentTime);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(elapsedTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(elapsedTimeValue))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(currentTimeValue)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(alarmButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Connection3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Connection1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Connection2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Connection4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(currentTimeValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(elapsedTime)
                            .addComponent(elapsedTimeValue))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Connection1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Connection2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Connection4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Connection3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alarmButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void lastUpdateValue3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastUpdateValue3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastUpdateValue3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Connection1;
    private javax.swing.JPanel Connection2;
    private javax.swing.JPanel Connection3;
    private javax.swing.JPanel Connection4;
    private javax.swing.JPanel alarmButtons;
    private javax.swing.JScrollPane alarmLog1;
    private javax.swing.JScrollPane alarmLog2;
    private javax.swing.JScrollPane alarmLog3;
    private javax.swing.JScrollPane alarmLog4;
    private javax.swing.JLabel bpmLabel1;
    private javax.swing.JLabel bpmLabel2;
    private javax.swing.JLabel bpmLabel3;
    private javax.swing.JLabel bpmLabel4;
    private javax.swing.JLabel bpmValue1;
    private javax.swing.JLabel bpmValue2;
    private javax.swing.JLabel bpmValue3;
    private javax.swing.JLabel bpmValue4;
    private javax.swing.JLabel currentTime;
    private javax.swing.JLabel currentTimeValue;
    private javax.swing.JLabel elapsedTime;
    private javax.swing.JLabel elapsedTimeValue;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lastUpdateLabel1;
    private javax.swing.JLabel lastUpdateLabel2;
    private javax.swing.JLabel lastUpdateLabel3;
    private javax.swing.JLabel lastUpdateLabel4;
    private javax.swing.JTextField lastUpdateValue1;
    private javax.swing.JTextField lastUpdateValue2;
    private javax.swing.JTextField lastUpdateValue3;
    private javax.swing.JTextField lastUpdateValue4;
    private javax.swing.JLabel maxLabel1;
    private javax.swing.JLabel maxLabel2;
    private javax.swing.JLabel maxLabel3;
    private javax.swing.JLabel maxLabel4;
    private javax.swing.JLabel maxValue1;
    private javax.swing.JLabel maxValue2;
    private javax.swing.JLabel maxValue3;
    private javax.swing.JLabel maxValue4;
    private javax.swing.JLabel minLabel1;
    private javax.swing.JLabel minLabel2;
    private javax.swing.JLabel minLabel3;
    private javax.swing.JLabel minLabel4;
    private javax.swing.JLabel minValue1;
    private javax.swing.JLabel minValue2;
    private javax.swing.JLabel minValue3;
    private javax.swing.JLabel minValue4;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables

    /**
     * Capture the time of the last received update from the client 
     * (in our case BMP would be the most accurate measurement)
     */
    public String captureTime() {
        now = Calendar.getInstance();
        // get the time from the now calendar
        Date time = now.getTime();
        
       // currentTimeValue.setText(dateFormat.format(time));
        return dateFormat.format(time);
    }
    
    /**
     * Construct an alarm message
     * 
     */
    public String constructAMessage(javax.swing.JLabel bpmValueElement, javax.swing.JLabel minValueElement, javax.swing.JLabel maxValueElement, 
                                    javax.swing.JScrollPane alarmValueElement) {
        String str;
        int bpm = Integer.parseInt(bpmValueElement.getText());
        int min = Integer.parseInt(minValueElement.getText());
        int max = Integer.parseInt(maxValueElement.getText());
        
        
        if( bpm > max || bpm < min) {
            str = "ALARM";
        }
        return "";
    }
    
    /**
     * Update the time
     */
    public void updateTime() {
        // set the now calander
        now = Calendar.getInstance();
        // get the time from the now calander
        Date time = now.getTime();
        // Set the time label to the selected time
        currentTimeValue.setText(dateFormat.format(time));
        // Set the elapsed variable to the current time minus the start time.
        elapsedTimeValue.setText(dateFormat.format((time.getTime() - start.getTimeInMillis() - 3600000)));
    }
    /**
     * Pass the BPM into frame GUI
     */
    public void updateConnected(int frameNo) {
        switch (frameNo) {
            case 1:
                jCheckBox1.setSelected(true);
                break;
            case 2:
                jCheckBox2.setSelected(true);
                break;
            case 3:
                jCheckBox3.setSelected(true);
                break;
            case 4:
                jCheckBox4.setSelected(true);
                break;
            default:
                break;
        }
    }
    
    /**
     * Update a frame once a certain client is disconnected
     */
    public void disconnect(int frameNo) {
        switch (frameNo) {
            case 1:                
                jCheckBox1.setSelected(false);
                bpmValue1.setText("Not connected");
                minValue1.setText("");
                maxValue1.setText("");
                lastUpdateValue1.setText("");
                break;
            case 2:               
                jCheckBox2.setSelected(false);
                bpmValue2.setText("Not connected");
                minValue2.setText("");
                maxValue2.setText("");
                lastUpdateValue2.setText("");
                break;
            case 3:                
                jCheckBox3.setSelected(false);
                bpmValue3.setText("Not connected");
                minValue3.setText("");
                maxValue3.setText("");
                lastUpdateValue3.setText("");
                break;
            case 4:
                jCheckBox4.setSelected(false);
                bpmValue4.setText("Not connected");
                minValue4.setText("");
                maxValue4.setText("");
                lastUpdateValue4.setText("");
                break;
            default:
                break;
        }
    }

    /**
     * Pass the BPM into GUI
     */
    public void updateBPM(int frameNo, int bpm) {
        switch (frameNo) {
            case 1:
                bpmValue1.setText("" + bpm);
                lastUpdateValue1.setText(captureTime());
                break;
            case 2:
                bpmValue2.setText("" + bpm);
                lastUpdateValue2.setText(captureTime());
                break;
            case 3:
                bpmValue3.setText("" + bpm);
                lastUpdateValue3.setText(captureTime());
                break;
            case 4:
                bpmValue4.setText("" + bpm);
                lastUpdateValue4.setText(captureTime());
                break;
            default:
                break;
        }
    }

    /**
     * Pass the min and max value into GUI
     */
    public void updateMaxMin(int frameNo, int max, int min) {
        switch (frameNo) {
            case 1:
                minValue1.setText("" + max);
                maxValue1.setText("" + min);
                break;
            case 2:
                minValue2.setText("" + max);
                maxValue2.setText("" + min);
                break;
            case 3:
                minValue3.setText("" + max);
                maxValue3.setText("" + min);
                break;
            case 4:
                minValue4.setText("" + max);
                maxValue4.setText("" + min);
                break;
            default:
                break;
        }
    }

    @Override
    public void run() {
        // Show the GUI
        setVisible(true);
        // Update the time in near real time
        while (true) {
            updateTime();
        }
    }
}
